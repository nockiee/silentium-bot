import disnake
from disnake.ext import commands
import random
import os
from typing import List

class Quotes(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.quotes_file = "quotes.txt"
        self._quotes_cache: List[str] = []
        self._ensure_quotes_file_exists()
        self._load_quotes()

    def _ensure_quotes_file_exists(self) -> None:
        if not os.path.exists(self.quotes_file):
            with open(self.quotes_file, 'w', encoding='utf-8'):
                pass

    def _load_quotes(self) -> List[str]:
        if self._quotes_cache:
            return self._quotes_cache
            
        try:
            with open(self.quotes_file, "r", encoding="utf-8") as f:
                quotes = [line.strip() for line in f if line.strip()]
                
            if not quotes:
                quotes = ["–ú—É–¥—Ä–æ—Å—Ç—å –ø—Ä–∏—Ö–æ–¥–∏—Ç —Å –æ–ø—ã—Ç–æ–º, –∞ –æ–ø—ã—Ç - —Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–æ–º –º—É–¥—Ä–æ—Å—Ç–∏. (–§–∞–π–ª —Å —Ü–∏—Ç–∞—Ç–∞–º–∏ –ø—É—Å—Ç)"]
                
            self._quotes_cache = quotes
            return quotes
            
        except (IOError, UnicodeDecodeError) as e:
            print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ü–∏—Ç–∞—Ç: {e}")
            return ["–ú—É–¥—Ä–æ—Å—Ç—å –ø—Ä–∏—Ö–æ–¥–∏—Ç —Å –æ–ø—ã—Ç–æ–º, –∞ –æ–ø—ã—Ç - —Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–æ–º –º—É–¥—Ä–æ—Å—Ç–∏."]

    @commands.slash_command(name="quote", description="–ü–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω—É—é —Ü–∏—Ç–∞—Ç—É")
    async def quote(self, inter: disnake.ApplicationCommandInteraction):
        quotes = self._load_quotes()
        selected_quote = random.choice(quotes)
        await inter.response.send_message(f"üìú *\"{selected_quote}\"*")

    @commands.Cog.listener()
    async def on_ready(self):
        print(f"–ú–æ–¥—É–ª—å Quotes —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω! –î–æ—Å—Ç—É–ø–Ω–æ {len(self._load_quotes())} —Ü–∏—Ç–∞—Ç.")

def setup(bot):
    bot.add_cog(Quotes(bot))